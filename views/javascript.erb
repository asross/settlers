<%#<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>%>
<script type="text/javascript">

  $(document).ready(function() {
    // Display latest messages first

    var numMessages = <%= @game.messages.size %>;
    var numActions = <%= @game.action_count %>;

    function scrollChat() {
      chat = document.getElementById('message-area');
      chat.scrollTop = chat.scrollHeight;
    }
    scrollChat();

    // %w(roll build_settlement build_city build_road trade_in pass_turn move_robber rob_player)
    <% Game::ACTIONS.each do |action| %>
      $(document).on('click', '#<%= action %>', function() {
        window.currentAction = '<%= action %>';
        $('body').removeClass();
        <% if Game.instance_method(action).arity == 1 %>
          performAction('<%= action %>', []);
        <% else %>
          $('body').addClass('<%= action %>-select');
        <% end %>
      });
    <% end %>

    window.currentAction = null;

    function hex(coords) {
      return $('.hex[data-coords="['+coords[0]+', '+coords[1]+']"]');
    }

    function performAction(action, args) {
      $.ajax({
        url: '/games/<%= @game.id %>/actions',
        type: 'POST',
        data: { color: '<%= @player.color %>', data: JSON.stringify({ action: action, args: args }) }
      }).success(function(data, textStatus, jqXHR) {
        $('body').removeClass();
        var json = JSON.parse(data);
        $('#board').html(json.html);
        if (json.data.messages.length > numMessages) {
          scrollChat();
        }
        numMessages = json.data.messages.length;
        numActions = json.data.action_count;
      }).error(function(jqXHR, textStatus, errorThrown) {
        console.log(jqXHR.responseText);
        $('#error').text(jqXHR.responseText);
      });
    }

    $(document).on('submit', 'form[action="/messages"]', function(event) {
      data = {}
      form = $(event.currentTarget);
      form.find('input').each(function() {
        data[$(this).attr('name')] = $(this).val();
      });
      $.ajax({
        url: '/games/<%= @game.id %>/messages',
        type: 'POST',
        data: data
      }).success(function(data, textStatus, jqXHR) {
        $('#message-area').html(data);
        scrollChat();
      });
      form.find('input[type="text"]').val('');
      return false;
    });

    $(document).on('mouseenter', '.city-marker, .road-marker', function() {
      coords = $(this).data('coords');
      for (i = 0; i < coords.length; i++) hex(coords[i]).addClass('hover');
    });

    $(document).on('mouseleave', '.city-marker, .road-marker', function () {
      coords = $(this).data('coords');
      for (i = 0; i < coords.length; i++) hex(coords[i]).removeClass('hover');
    });

    $(document).on('click', '.city-marker, .road-marker, .settlement', function() {
      performAction(window.currentAction, $(this).data('coords'));
    });

    $(document).on('click', '#trade-submit', function() {
      resource1 = $('select[name="resource1"]:visible').val();
      resource2 = $('select[name="resource2"]:visible').val();
      performAction('trade_in', [resource1, resource2]);
    });

    $(document).on('click', '#monopoly-submit', function() {
      resource = $('select[name="resource"]:visible').val();
      performAction('monopoly', resource);
    });

    $(document).on('click', '#year-of-plenty-submit', function() {
      resource1 = $('select[name="resource1"]:visible').val();
      resource2 = $('select[name="resource2"]:visible').val();
      performAction('year_of_plenty', [resource1, resource2]);
    });

    function getResources($context) {
      resources = []
      <% Player::RESOURCE_CARDS.each do |resource| %>
        value = $context.find('input[name="<%= resource %>"]:visible').val();
        if (value)
          for (i = 0; i < parseInt(value); i++)
            resources.push('<%= resource %>')
      <% end %>
      return resources
    }

    $(document).on('click', '#discard-submit', function() {
      performAction('discard', getResources($(this).closest('.widget')));
    });

    $(document).on('click', '#request-trade-submit', function() {
      $widget = $(this).closest('.widget');
      myResources = getResources($widget.find('.my-resources'));
      yourResources = getResources($widget.find('.your-resources'));
      playerColor = $widget.find('select').val();
      performAction('request_trade', [playerColor, myResources, yourResources]);
    });

    $(document).on('click', '.tile, .number', function() {
      if ($('body').hasClass('move_robber-select')) {
        performAction(window.currentAction, [$(this).closest('.hex').data('coords')]);
      }
    });

    $(document).on('click', '.player .name', function() {
      if ($('body').hasClass('rob_player-select')) {
        performAction(window.currentAction, $(this).closest('.player').data('color'));
      }
    });

    function pollBoard() {
      $.ajax({
        url: '/games/<%= @game.id %>/board?color=<%= @player.color %>',
        type: 'GET'
      }).success(function(data, textStatus, jqXHR) {
        var json = JSON.parse(data);
        if (document.body.classList.length == 0) {
          if (json.data.action_count > numActions) {
            $('#board').html(json.html);
          }
          if (json.data.messages.length > numMessages) {
            scrollChat();
          }
          numMessages = json.data.messages.length;
          numActions = json.data.action_count;
        }
      });
    }

    setInterval(pollBoard, 1000);

    function hotSocket() {
      var ws = new WebSocket(location.protocol.replace('http', 'ws') + '//' + location.host + '/' + '<%= @game.id %>');

      ws.onopen = function(d) {
        console.log('Socket opened');
        console.log(d);
      };

      ws.onmessage = function(evt) {
        console.log('Socket message');
        console.log(evt);
        response = JSON.parse(evt.data);
        event = response[0];
        data = response[1];
        if (event == 'action') {
          $('#board').html(data.html);
        } else if (event == 'message') {
          $('#message-area').html(data.html);
        }
        scrollChat();
      };

      ws.onerror = function(e) {
        console.log('Socket error');
        console.log(e);
      }

      ws.onclose = function() {
        console.log('Socket closed');
        setTimeout(hotSocket, 1000);
      };
    }

    hotSocket();
  });
</script>
